-- 1. 학생 이름과 주소지를 표시. 출력 헤더는 "학생 이름", "주소지"
-- 이름 오름차순으로 정렬.
SELECT * FROM TB_STUDENT;
SELECT STUDENT_NAME "학생 이름", STUDENT_ADDRESS "주소지"
FROM TB_STUDENT
ORDER BY STUDENT_NAME;

-- 2. 휴학중인 학생들의 이름과 주민번호를 나이가 적은 순서로 화면에 출력.
SELECT STUDENT_NAME, STUDENT_SSN
FROM TB_STUDENT
WHERE ABSENCE_YN = 'Y'
ORDER BY SUBSTR(STUDENT_SSN, 1, 6) DESC;

-- 3. 주소지가 강원도나 경기도인 학생들 중
-- 1900년대 학번을 가진 학생들의 이름과 학번, 주소를 이름 오름차순 정렬.
-- 출력 헤더 "학생 이름", "학번", "거주지 주소"로 출력.
SELECT STUDENT_NAME "학생 이름", STUDENT_NO 학번, STUDENT_ADDRESS "거주지 주소"
FROM TB_STUDENT
WHERE STUDENT_ADDRESS LIKE '강원%'
AND STUDENT_NO NOT LIKE 'A%'
UNION
SELECT STUDENT_NAME "학생 이름", STUDENT_NO 학번, STUDENT_ADDRESS "거주지 주소"
FROM TB_STUDENT
WHERE STUDENT_ADDRESS LIKE '경기%'
AND STUDENT_NO NOT LIKE 'A%'
ORDER BY 1;

-- 4. 현재 법학과 교수 중 가장 나이가 많은 사람부터 이름을 조회 -- 법학과 005
SELECT * FROM TB_PROFESSOR;
SELECT * FROM TB_DEPARTMENT;
SELECT * FROM TB_STUDENT;

SELECT PROFESSOR_NAME, PROFESSOR_SSN
FROM TB_PROFESSOR
WHERE DEPARTMENT_NO = '005'
ORDER BY SUBSTR(PROFESSOR_SSN, 1, 6);

-- 5. 2004년 2학기 'C3118100' 과목을 수강한 학생들의 학점 조회.
-- 학점이 높은 학생부터 표시하고 학점이 같으면 학번이 낮은 학생부터 표시.
SELECT STUDENT_NO, TO_CHAR(POINT, 'FM9.00') POINT FROM TB_GRADE
WHERE TERM_NO = '200402'
AND CLASS_NO = 'C3118100'
ORDER BY POINT DESC, STUDENT_NO;

-- 6. 학생 번호, 학생 이름, 학과 이름을 학생 이름 오름차순 정렬 조회
SELECT STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME
FROM TB_STUDENT ts
LEFT JOIN TB_DEPARTMENT td ON (ts.DEPARTMENT_NO = td.DEPARTMENT_NO)
ORDER BY STUDENT_NAME;

-- 7. 춘 기술대학의 과목 이름과 과목의 학과 이름을 출력.
SELECT * FROM TB_CLASS;
SELECT * FROM TB_DEPARTMENT;
SELECT CLASS_NAME, DEPARTMENT_NAME
FROM TB_CLASS tc
LEFT JOIN TB_DEPARTMENT td ON (tc.DEPARTMENT_NO = td.DEPARTMENT_NO);

-- 8. 과목별 교수 이름을 찾기
SELECT * FROM TB_CLASS;
SELECT * FROM TB_CLASS_PROFESSOR;
SELECT * FROM TB_PROFESSOR;
SELECT * FROM TB_DEPARTMENT;
SELECT * FROM TB_GRADE tg;
SELECT CLASS_NAME, PROFESSOR_NAME
FROM TB_CLASS tc 
JOIN TB_CLASS_PROFESSOR tcp  ON (tc.CLASS_NO = tcp.CLASS_NO)
JOIN TB_PROFESSOR tp ON (tp.PROFESSOR_NO = tcp.PROFESSOR_NO);

-- 9. 8번의 결과 중 '인문사회' 계열에 속한 과목의 교수 이름
SELECT CLASS_NAME, PROFESSOR_NAME
FROM TB_CLASS tc 
JOIN TB_CLASS_PROFESSOR tcp  ON (tc.CLASS_NO = tcp.CLASS_NO)
JOIN TB_PROFESSOR tp ON (tp.PROFESSOR_NO = tcp.PROFESSOR_NO)
JOIN TB_DEPARTMENT td ON (td.DEPARTMENT_NO = tp.DEPARTMENT_NO)
WHERE CATEGORY = '인문사회';

-- 10. '음악학과' 학생들의 평점을 출력. 
-- 출력헤더는 "학번", "학생 이름", "전체 평점"
-- 평점은 소수점 1자리까지만 반올림 표시.
SELECT * FROM TB_STUDENT;
SELECT ts.STUDENT_NO 학번, ts.STUDENT_NAME "학생 이름", ROUND(AVG(POINT), 1) "전체 평점"
FROM TB_STUDENT ts
JOIN TB_GRADE tg ON (ts.STUDENT_NO = tg.STUDENT_NO)
JOIN TB_DEPARTMENT td ON (ts.DEPARTMENT_NO = td.DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '음악학과'
GROUP BY ts.STUDENT_NO, ts.STUDENT_NAME
ORDER BY 1;

-- 11. 학번이 'A313047'인 학생의 학과 이름, 학생 이름, 지도 교수 이름
SELECT * FROM TB_STUDENT;
SELECT DEPARTMENT_NAME "학과 이름", STUDENT_NAME "학생 이름", PROFESSOR_NAME "지도 교수 이름"
FROM TB_STUDENT MAIN
JOIN TB_DEPARTMENT SUB ON (MAIN.DEPARTMENT_NO = SUB.DEPARTMENT_NO)
JOIN TB_PROFESSOR SUB2 ON (SUB2.PROFESSOR_NO = MAIN.COACH_PROFESSOR_NO)
WHERE STUDENT_NO = 'A313047';

-- 12. 2007년도에 '인간관계론' 과목을 수강한 학생을 찾아 학생 이름과 수강학기 표시
SELECT STUDENT_NAME, TERM_NO "TERM_NAME"
FROM TB_STUDENT
JOIN TB_GRADE USING (STUDENT_NO)
JOIN TB_CLASS USING (CLASS_NO)
WHERE CLASS_NAME = '인간관계론'
AND TERM_NO LIKE '2007%';

-- 13. 예체능 계열 과목 중 과목 담당교수를 한 명도 배정받지 못한 과목을 찾아
-- 과목 이름과 학과 이름을 출력.
SELECT CLASS_NAME, DEPARTMENT_NAME
FROM TB_CLASS
LEFT JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
LEFT JOIN TB_CLASS_PROFESSOR USING (CLASS_NO)
WHERE CATEGORY = '예체능'
AND PROFESSOR_NO IS NULL;

-- 14. 춘 기술대학 서반아어학과 학생들의 지도교수를 게시하고자 한다.
-- 학생 이름과 지도 교수 이름을 찾고 지도 교수가 없는 학생일 경우 지도교수 미지정으로 표시
-- 고학번 학생이 먼저 표시되도록 함.
SELECT STUDENT_NAME "학생 이름", NVL(PROFESSOR_NAME, '지도교수 미지정') "지도 교수"
FROM TB_STUDENT MAIN
LEFT JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
LEFT JOIN TB_PROFESSOR SUB ON (SUB.PROFESSOR_NO = MAIN.COACH_PROFESSOR_NO)
WHERE DEPARTMENT_NAME = '서반아어학과'
ORDER BY STUDENT_NO;

-- 15. 휴학생이 아닌 학생 중 평점이 4.0 이상인 학생을 찾아
-- 학번, 이름, 학과 이름, 평점을 출력.
SELECT * FROM TB_GRADE;
SELECT STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME, ROUND(AVG(POINT), 8) "평점"
FROM TB_STUDENT S
LEFT JOIN TB_DEPARTMENT D USING (DEPARTMENT_NO)
JOIN TB_GRADE USING(STUDENT_NO)
WHERE ABSENCE_YN = 'N'
GROUP BY STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME
HAVING ROUND(AVG(POINT), 8) >= 4.0
ORDER BY 1;

-- 16. 환경조경학과 전공과목들의 과목 별 평점을 파악
SELECT * FROM TB_CLASS;
SELECT * FROM TB_DEPARTMENT;
SELECT * FROM TB_GRADE;
SELECT CLASS_NO, CLASS_NAME, AVG(POINT)
FROM TB_CLASS
JOIN TB_GRADE USING (CLASS_NO)
JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '환경조경학과'
AND CLASS_TYPE LIKE '전공%'
GROUP BY CLASS_NO, CLASS_NAME
ORDER BY 1;

-- 17. 춘 기술대학에 다니고 있는 최경희 학생과 같은 과 학생들의 이름과 주소를 출력
SELECT STUDENT_NAME, STUDENT_ADDRESS
FROM TB_STUDENT
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
WHERE DEPARTMENT_NO = '038';

-- 18. 국어국문학과에서 총 평점이 가장 높은 학생의 이름과 학번을 표시
SELECT * FROM TB_STUDENT;
SELECT * FROM TB_GRADE;
SELECT STUDENT_NO, STUDENT_NAME
FROM TB_STUDENT
JOIN TB_GRADE USING (STUDENT_NO)
JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '국어국문학과'
GROUP BY STUDENT_NO, STUDENT_NAME
HAVING MAX(SUM(AVG(POINT)));

SELECT STUDENT_NO, STUDENT_NAME
FROM (
	SELECT STUDENT_NO, STUDENT_NAME, AVG(POINT) 평점
	FROM TB_GRADE
	JOIN TB_STUDENT USING (STUDENT_NO)
	WHERE DEPARTMENT_NO = (
		SELECT DEPARTMENT_NO
		FROM TB_DEPARTMENT
		WHERE DEPARTMENT_NAME = '국어국문학과'
		)
	GROUP BY STUDENT_NO, STUDENT_NAME
	ORDER BY 평점 DESC)
WHERE ROWNUM = 1;

-- 19. 춘 기술 대학의 "환경조경학과"가 속한 같은 계열 학과들의
-- 학과 별 전공과목 평점을 파악하기 위한 sql문 작성. CATEGORY 자연과학.
SELECT CATEGORY FROM TB_DEPARTMENT
WHERE DEPARTMENT_NAME = '환경조경학과';

SELECT DEPARTMENT_NAME "계열 학과명", ROUND(AVG(POINT), 1) "전공 평점"
FROM TB_DEPARTMENT
JOIN TB_CLASS USING (DEPARTMENT_NO)
JOIN TB_GRADE USING (CLASS_NO)
WHERE CATEGORY = (
	SELECT CATEGORY FROM TB_DEPARTMENT
	WHERE DEPARTMENT_NAME = '환경조경학과'
)
AND CLASS_TYPE LIKE '전공%'
GROUP BY DEPARTMENT_NAME
ORDER BY 1;




